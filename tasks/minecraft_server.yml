- name: Create Minecraft Server container
  become_user: root
  become: true
  docker_container:
    name: "{{HOSTNAME}}"
    image: "itzg/minecraft-server"
    pull: yes
    state: started
    restart: yes
    restart_policy: unless-stopped
    hostname: "{{HOSTNAME}}.mcserver"
    ports: 
      - "{{ ansible_ssh_host }}:{{PORT}}:25565/tcp"
    volumes:
      - '{{homedir}}/container-program-files/fileserver_share_files/minecraft-server:/data'
    env: 
        TZ: "{{TZ}}"
        TYPE: "{{TYPE}}" 
        MEMORY: "{{MEMORY}}" 
        MAX_MEMORY: "{{MAX_MEMORY}}" 
        INIT_MEMORY: "{{INIT_MEMORY}}" 
        MOTD: "{{MOTD}}" 
        ENABLE_RCON: "{{ENABLE_RCON}}" 
        RCON_PASSWORD: "{{RCON_PASSWORD}}" 
        EXEC_DIRECTLY: "{{EXEC_DIRECTLY}}" 
        CPUS: "{{CPUS}}" 
        EULA: "{{EULA}}"
        TUNE_VIRTUALIZED: "TRUE"
        TUNE_NURSERY_SIZES: "TRUE"

- name: Copy a "bukkit.yml" file from repo to the remote machine
  copy:
    src: "./defaults/bukkit.yml"
    dest: "{{homedir}}container-program-files/fileserver_share_files/minecraft-server/bukkit.yml"

- name: Copy a "paper.yml" file from repo to the remote machine
  copy:
    src: "./defaults/paper.yml"
    dest: "{{homedir}}container-program-files/fileserver_share_files/minecraft-server/paper.yml"

- name: Copy a "server.properties" file from repo to the remote machine
  copy:
    src: "./defaults/server.properties"
    dest: "{{homedir}}container-program-files/fileserver_share_files/minecraft-server/server.properties"
  
- name: Copy a "spigot.yml" file from repo to the remote machine
  copy:
    src: "./defaults/spigot.yml"
    dest: "{{homedir}}container-program-files/fileserver_share_files/minecraft-server/spigot.yml"

- name: report public ip and save to VAR
  shell: "curl 'https://api.ipify.org'"
  register: public_ip

- name: File Server
  docker_container:
    name: "fileserver"
    image: "filebrowser/filebrowser"
    pull: yes
    state: started
    restart: yes
    restart_policy: unless-stopped
    ports: 
      - "{{ ansible_ssh_host }}:8092:80"
    volumes:
      - '{{homedir}}/container-program-files/fileserver_share_files:/srv'
      - '{{homedir}}/container-program-files/fileserver/database.db:/database.db'
      - '{{homedir}}/container-program-files/plex/filebrowser.json:/filebrowser.json'
    env: 
        TZ: "America/Toronto"
        ADVERTISE_IP: "http://{{ ansible_ssh_host }}:32400/"
        VERSION: "docker"